// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Azure.IoTCentral.Preview.Models
{
    /// <summary> The deployment manifest used for edge devices. </summary>
    public partial class DeploymentManifest
    {
        /// <summary> Initializes a new instance of DeploymentManifest. </summary>
        /// <param name="data"> Content of the the deployment manifest. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="data"/> is null. </exception>
        public DeploymentManifest(object data)
        {
            Argument.AssertNotNull(data, nameof(data));

            Data = data;
            Organizations = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of DeploymentManifest. </summary>
        /// <param name="id"> Unique ID of the deployment manifest. </param>
        /// <param name="displayName"> Display name of the deployment manifest. </param>
        /// <param name="data"> Content of the the deployment manifest. </param>
        /// <param name="etag"> Etag to prevent conflict when updating the deployment manifest. </param>
        /// <param name="organizations"> The organization that deployment manifest belongs to. If not present, the deployment manifest is root-level or personal. Only one organization is supported today, multiple organizations will be supported soon. </param>
        internal DeploymentManifest(string id, string displayName, object data, string etag, IList<string> organizations)
        {
            Id = id;
            DisplayName = displayName;
            Data = data;
            Etag = etag;
            Organizations = organizations;
        }

        /// <summary> Unique ID of the deployment manifest. </summary>
        public string Id { get; }
        /// <summary> Display name of the deployment manifest. </summary>
        public string DisplayName { get; set; }
        /// <summary> Content of the the deployment manifest. </summary>
        public object Data { get; set; }
        /// <summary> Etag to prevent conflict when updating the deployment manifest. </summary>
        public string Etag { get; set; }
        /// <summary> The organization that deployment manifest belongs to. If not present, the deployment manifest is root-level or personal. Only one organization is supported today, multiple organizations will be supported soon. </summary>
        public IList<string> Organizations { get; }
    }
}
