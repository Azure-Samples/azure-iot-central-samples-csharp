// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.Azure.IoTCentral.Preview.Models
{
    public partial class Dashboard : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("displayName");
            writer.WriteStringValue(DisplayName);
            if (Optional.IsCollectionDefined(Tiles))
            {
                writer.WritePropertyName("tiles");
                writer.WriteStartArray();
                foreach (var item in Tiles)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Favorite))
            {
                writer.WritePropertyName("favorite");
                writer.WriteBooleanValue(Favorite.Value);
            }
            if (Optional.IsDefined(Etag))
            {
                writer.WritePropertyName("etag");
                writer.WriteStringValue(Etag);
            }
            if (Optional.IsCollectionDefined(Organizations))
            {
                writer.WritePropertyName("organizations");
                writer.WriteStartArray();
                foreach (var item in Organizations)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static Dashboard DeserializeDashboard(JsonElement element)
        {
            Optional<string> id = default;
            string displayName = default;
            Optional<IList<Tile>> tiles = default;
            Optional<bool> personal = default;
            Optional<bool> favorite = default;
            Optional<string> etag = default;
            Optional<IList<string>> organizations = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("displayName"))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tiles"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<Tile> array = new List<Tile>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Tile.DeserializeTile(item));
                    }
                    tiles = array;
                    continue;
                }
                if (property.NameEquals("personal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    personal = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("favorite"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    favorite = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("etag"))
                {
                    etag = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("organizations"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    organizations = array;
                    continue;
                }
            }
            return new Dashboard(id.Value, displayName, Optional.ToList(tiles), Optional.ToNullable(personal), Optional.ToNullable(favorite), etag.Value, Optional.ToList(organizations));
        }
    }
}
