// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Microsoft.Azure.IoTCentral.Preview.Models
{
    public partial class ImageTileConfigurationFormat : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(BackgroundColor))
            {
                writer.WritePropertyName("backgroundColor");
                writer.WriteStringValue(BackgroundColor);
            }
            if (Optional.IsDefined(FitImage))
            {
                writer.WritePropertyName("fitImage");
                writer.WriteBooleanValue(FitImage.Value);
            }
            if (Optional.IsDefined(TextColor))
            {
                writer.WritePropertyName("textColor");
                writer.WriteStringValue(TextColor);
            }
            if (Optional.IsDefined(TextSize))
            {
                writer.WritePropertyName("textSize");
                writer.WriteNumberValue(TextSize.Value);
            }
            if (Optional.IsDefined(TextSizeUnit))
            {
                writer.WritePropertyName("textSizeUnit");
                writer.WriteStringValue(TextSizeUnit.Value.ToString());
            }
            if (Optional.IsDefined(ShowTitle))
            {
                writer.WritePropertyName("showTitle");
                writer.WriteBooleanValue(ShowTitle.Value);
            }
            writer.WriteEndObject();
        }

        internal static ImageTileConfigurationFormat DeserializeImageTileConfigurationFormat(JsonElement element)
        {
            Optional<string> backgroundColor = default;
            Optional<bool> fitImage = default;
            Optional<string> textColor = default;
            Optional<float> textSize = default;
            Optional<ImageTileTextUnits> textSizeUnit = default;
            Optional<bool> showTitle = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("backgroundColor"))
                {
                    backgroundColor = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fitImage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    fitImage = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("textColor"))
                {
                    textColor = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("textSize"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    textSize = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("textSizeUnit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    textSizeUnit = new ImageTileTextUnits(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("showTitle"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    showTitle = property.Value.GetBoolean();
                    continue;
                }
            }
            return new ImageTileConfigurationFormat(backgroundColor.Value, Optional.ToNullable(fitImage), textColor.Value, Optional.ToNullable(textSize), Optional.ToNullable(textSizeUnit), Optional.ToNullable(showTitle));
        }
    }
}
