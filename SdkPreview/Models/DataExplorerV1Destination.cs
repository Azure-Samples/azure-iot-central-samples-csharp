// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Azure.IoTCentral.Preview.Models
{
    /// <summary> The azure data explorer destination definition. </summary>
    public partial class DataExplorerV1Destination : Destination
    {
        /// <summary> Initializes a new instance of DataExplorerV1Destination. </summary>
        /// <param name="displayName"> Display name of the destination. </param>
        /// <param name="clusterUrl"> The resource URI of the Data Explorer instance. </param>
        /// <param name="database"> Name Data Explorer database where data should be written. </param>
        /// <param name="table"> The table within the Data Explorer database that will receive the data. </param>
        /// <param name="authorization"> The authentication definition for azure data explorer destination. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/>, <paramref name="clusterUrl"/>, <paramref name="database"/>, <paramref name="table"/> or <paramref name="authorization"/> is null. </exception>
        public DataExplorerV1Destination(string displayName, string clusterUrl, string database, string table, DataExplorerV1DestinationAuth authorization) : base(displayName)
        {
            Argument.AssertNotNull(displayName, nameof(displayName));
            Argument.AssertNotNull(clusterUrl, nameof(clusterUrl));
            Argument.AssertNotNull(database, nameof(database));
            Argument.AssertNotNull(table, nameof(table));
            Argument.AssertNotNull(authorization, nameof(authorization));

            ClusterUrl = clusterUrl;
            Database = database;
            Table = table;
            Authorization = authorization;
            Type = "dataexplorer@v1";
        }

        /// <summary> Initializes a new instance of DataExplorerV1Destination. </summary>
        /// <param name="status"> Indication of the current health and operation of the export or destination. </param>
        /// <param name="errors"> Errors encountered by the export or destination. </param>
        /// <param name="lastExportTime"> The timestamp of the last message that was sent to the export or destination. </param>
        /// <param name="id"> Unique ID of the destination. </param>
        /// <param name="displayName"> Display name of the destination. </param>
        /// <param name="type"> The type of destination configuration. </param>
        /// <param name="clusterUrl"> The resource URI of the Data Explorer instance. </param>
        /// <param name="database"> Name Data Explorer database where data should be written. </param>
        /// <param name="table"> The table within the Data Explorer database that will receive the data. </param>
        /// <param name="authorization"> The authentication definition for azure data explorer destination. </param>
        internal DataExplorerV1Destination(string status, IReadOnlyList<DataExportError> errors, DateTimeOffset? lastExportTime, string id, string displayName, string type, string clusterUrl, string database, string table, DataExplorerV1DestinationAuth authorization) : base(status, errors, lastExportTime, id, displayName, type)
        {
            ClusterUrl = clusterUrl;
            Database = database;
            Table = table;
            Authorization = authorization;
            Type = type ?? "dataexplorer@v1";
        }

        /// <summary> The resource URI of the Data Explorer instance. </summary>
        public string ClusterUrl { get; set; }
        /// <summary> Name Data Explorer database where data should be written. </summary>
        public string Database { get; set; }
        /// <summary> The table within the Data Explorer database that will receive the data. </summary>
        public string Table { get; set; }
        /// <summary> The authentication definition for azure data explorer destination. </summary>
        public DataExplorerV1DestinationAuth Authorization { get; set; }
    }
}
