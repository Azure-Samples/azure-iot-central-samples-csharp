// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Azure.IoTCentral.Preview.Models
{
    /// <summary> The Dashboard. </summary>
    public partial class Dashboard
    {
        /// <summary> Initializes a new instance of Dashboard. </summary>
        /// <param name="displayName"> Display name of the dashboard. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/> is null. </exception>
        public Dashboard(string displayName)
        {
            Argument.AssertNotNull(displayName, nameof(displayName));

            DisplayName = displayName;
            Tiles = new ChangeTrackingList<Tile>();
            Organizations = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of Dashboard. </summary>
        /// <param name="id"> Unique ID of the dashboard. </param>
        /// <param name="displayName"> Display name of the dashboard. </param>
        /// <param name="tiles"> The tiles displayed by the dashboard. </param>
        /// <param name="personal"> Whether the dashboard is personal and can only be viewed by the current user. </param>
        /// <param name="favorite"> Whether the dashboard is favorited or not. </param>
        /// <param name="etag"> Etag to prevent conflict when updating the dashboard. </param>
        /// <param name="organizations"> The organization the dashboard belongs to. If not present, the dashboard is root-level or personal. only one organization is supported today, multiple organizations will be supported soon. </param>
        internal Dashboard(string id, string displayName, IList<Tile> tiles, bool? personal, bool? favorite, string etag, IList<string> organizations)
        {
            Id = id;
            DisplayName = displayName;
            Tiles = tiles;
            Personal = personal;
            Favorite = favorite;
            Etag = etag;
            Organizations = organizations;
        }

        /// <summary> Unique ID of the dashboard. </summary>
        public string Id { get; }
        /// <summary> Display name of the dashboard. </summary>
        public string DisplayName { get; set; }
        /// <summary> The tiles displayed by the dashboard. </summary>
        public IList<Tile> Tiles { get; }
        /// <summary> Whether the dashboard is personal and can only be viewed by the current user. </summary>
        public bool? Personal { get; }
        /// <summary> Whether the dashboard is favorited or not. </summary>
        public bool? Favorite { get; set; }
        /// <summary> Etag to prevent conflict when updating the dashboard. </summary>
        public string Etag { get; set; }
        /// <summary> The organization the dashboard belongs to. If not present, the dashboard is root-level or personal. only one organization is supported today, multiple organizations will be supported soon. </summary>
        public IList<string> Organizations { get; }
    }
}
