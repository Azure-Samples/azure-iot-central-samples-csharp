// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Microsoft.Azure.IoTCentral.Preview.Models
{
    /// <summary> The authentication definition with service principal for azure data explorer destination. </summary>
    public partial class DataExplorerV1DestinationServicePrincipalAuth : DataExplorerV1DestinationAuth
    {
        /// <summary> Initializes a new instance of DataExplorerV1DestinationServicePrincipalAuth. </summary>
        /// <param name="clientId"> Service Principal client ID. </param>
        /// <param name="tenantId"> Service Principal tenant ID. </param>
        /// <param name="clientSecret"> Service Principal client secret. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="clientId"/>, <paramref name="tenantId"/> or <paramref name="clientSecret"/> is null. </exception>
        public DataExplorerV1DestinationServicePrincipalAuth(string clientId, string tenantId, string clientSecret)
        {
            Argument.AssertNotNull(clientId, nameof(clientId));
            Argument.AssertNotNull(tenantId, nameof(tenantId));
            Argument.AssertNotNull(clientSecret, nameof(clientSecret));

            ClientId = clientId;
            TenantId = tenantId;
            ClientSecret = clientSecret;
            Type = "servicePrincipal";
        }

        /// <summary> Initializes a new instance of DataExplorerV1DestinationServicePrincipalAuth. </summary>
        /// <param name="type"> The kind of authentication to use. </param>
        /// <param name="clientId"> Service Principal client ID. </param>
        /// <param name="tenantId"> Service Principal tenant ID. </param>
        /// <param name="clientSecret"> Service Principal client secret. </param>
        internal DataExplorerV1DestinationServicePrincipalAuth(string type, string clientId, string tenantId, string clientSecret) : base(type)
        {
            ClientId = clientId;
            TenantId = tenantId;
            ClientSecret = clientSecret;
            Type = type ?? "servicePrincipal";
        }

        /// <summary> Service Principal client ID. </summary>
        public string ClientId { get; set; }
        /// <summary> Service Principal tenant ID. </summary>
        public string TenantId { get; set; }
        /// <summary> Service Principal client secret. </summary>
        public string ClientSecret { get; set; }
    }
}
