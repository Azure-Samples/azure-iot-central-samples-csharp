// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Microsoft.Azure.IoTCentral.Preview.Models
{
    /// <summary> The authentication definition with OAuth for webhook destination. </summary>
    public partial class WebhookV1DestinationOAuth : WebhookV1DestinationAuth
    {
        /// <summary> Initializes a new instance of WebhookV1DestinationOAuth. </summary>
        /// <param name="tokenUrl"> URL where an access token can be retrieved. </param>
        /// <param name="clientId"> OAuth2 client ID used when retrieving the token. </param>
        /// <param name="clientSecret"> OAuth2 client secret used to retrieve the token. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="tokenUrl"/>, <paramref name="clientId"/> or <paramref name="clientSecret"/> is null. </exception>
        public WebhookV1DestinationOAuth(string tokenUrl, string clientId, string clientSecret)
        {
            Argument.AssertNotNull(tokenUrl, nameof(tokenUrl));
            Argument.AssertNotNull(clientId, nameof(clientId));
            Argument.AssertNotNull(clientSecret, nameof(clientSecret));

            TokenUrl = tokenUrl;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Type = "oauth";
        }

        /// <summary> Initializes a new instance of WebhookV1DestinationOAuth. </summary>
        /// <param name="type"> The kind of authentication to use. </param>
        /// <param name="tokenUrl"> URL where an access token can be retrieved. </param>
        /// <param name="clientId"> OAuth2 client ID used when retrieving the token. </param>
        /// <param name="clientSecret"> OAuth2 client secret used to retrieve the token. </param>
        /// <param name="audience"> OAuth2 audience. </param>
        /// <param name="scope"> OAuth2 scope. </param>
        /// <param name="requestType"> Content-Type for the token request. </param>
        internal WebhookV1DestinationOAuth(string type, string tokenUrl, string clientId, string clientSecret, string audience, string scope, OAuthRequestType? requestType) : base(type)
        {
            TokenUrl = tokenUrl;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Audience = audience;
            Scope = scope;
            RequestType = requestType;
            Type = type ?? "oauth";
        }

        /// <summary> URL where an access token can be retrieved. </summary>
        public string TokenUrl { get; set; }
        /// <summary> OAuth2 client ID used when retrieving the token. </summary>
        public string ClientId { get; set; }
        /// <summary> OAuth2 client secret used to retrieve the token. </summary>
        public string ClientSecret { get; set; }
        /// <summary> OAuth2 audience. </summary>
        public string Audience { get; set; }
        /// <summary> OAuth2 scope. </summary>
        public string Scope { get; set; }
        /// <summary> Content-Type for the token request. </summary>
        public OAuthRequestType? RequestType { get; set; }
    }
}
