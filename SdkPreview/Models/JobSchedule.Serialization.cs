// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.Azure.IoTCentral.Preview.Models
{
    public partial class JobSchedule : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Recurrence))
            {
                writer.WritePropertyName("recurrence");
                writer.WriteStringValue(Recurrence.Value.ToSerialString());
            }
            writer.WritePropertyName("start");
            writer.WriteStringValue(Start, "O");
            if (Optional.IsDefined(End))
            {
                writer.WritePropertyName("end");
                writer.WriteObjectValue(End);
            }
            writer.WriteEndObject();
        }

        internal static JobSchedule DeserializeJobSchedule(JsonElement element)
        {
            Optional<JobRecurrence> recurrence = default;
            DateTimeOffset start = default;
            Optional<JobScheduleEnd> end = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("recurrence"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    recurrence = property.Value.GetString().ToJobRecurrence();
                    continue;
                }
                if (property.NameEquals("start"))
                {
                    start = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("end"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    end = JobScheduleEnd.DeserializeJobScheduleEnd(property.Value);
                    continue;
                }
            }
            return new JobSchedule(Optional.ToNullable(recurrence), start, end.Value);
        }
    }
}
