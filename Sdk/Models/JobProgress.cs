// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IoTCentral.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// progress summary for a scheduled job.
    /// </summary>
    public partial class JobProgress
    {
        /// <summary>
        /// Initializes a new instance of the JobProgress class.
        /// </summary>
        public JobProgress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobProgress class.
        /// </summary>
        /// <param name="total">The total number of entities targeted by the
        /// job.</param>
        /// <param name="pending">The number of entities for which the job is
        /// not yet running.</param>
        /// <param name="completed">The number of entities for which the job
        /// has completed.</param>
        /// <param name="failed">The number of entities for which the job has
        /// failed.</param>
        public JobProgress(int? total = default(int?), int? pending = default(int?), int? completed = default(int?), int? failed = default(int?))
        {
            Total = total;
            Pending = pending;
            Completed = completed;
            Failed = failed;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the total number of entities targeted by the job.
        /// </summary>
        [JsonProperty(PropertyName = "total")]
        public int? Total { get; set; }

        /// <summary>
        /// Gets or sets the number of entities for which the job is not yet
        /// running.
        /// </summary>
        [JsonProperty(PropertyName = "pending")]
        public int? Pending { get; set; }

        /// <summary>
        /// Gets or sets the number of entities for which the job has
        /// completed.
        /// </summary>
        [JsonProperty(PropertyName = "completed")]
        public int? Completed { get; set; }

        /// <summary>
        /// Gets or sets the number of entities for which the job has failed.
        /// </summary>
        [JsonProperty(PropertyName = "failed")]
        public int? Failed { get; set; }

    }
}
