// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IoTCentral.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for CertificateEntry.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum CertificateEntry
    {
        /// <summary>
        /// The entry of primary certificate
        /// </summary>
        [EnumMember(Value = "primary")]
        Primary,
        /// <summary>
        /// The entry of secondary certificate
        /// </summary>
        [EnumMember(Value = "secondary")]
        Secondary
    }
    internal static class CertificateEntryEnumExtension
    {
        internal static string ToSerializedValue(this CertificateEntry? value)
        {
            return value == null ? null : ((CertificateEntry)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this CertificateEntry value)
        {
            switch( value )
            {
                case CertificateEntry.Primary:
                    return "primary";
                case CertificateEntry.Secondary:
                    return "secondary";
            }
            return null;
        }

        internal static CertificateEntry? ParseCertificateEntry(this string value)
        {
            switch( value )
            {
                case "primary":
                    return CertificateEntry.Primary;
                case "secondary":
                    return CertificateEntry.Secondary;
            }
            return null;
        }
    }
}
