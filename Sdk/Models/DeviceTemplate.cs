// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IoTCentral.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The device template definition.
    /// </summary>
    public partial class DeviceTemplate
    {
        /// <summary>
        /// Initializes a new instance of the DeviceTemplate class.
        /// </summary>
        public DeviceTemplate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeviceTemplate class.
        /// </summary>
        /// <param name="type">The JSON-LD types of this device
        /// template.</param>
        /// <param name="capabilityModel">The capability model utilized by this
        /// device template.</param>
        /// <param name="id">Unique ID of the device template.</param>
        /// <param name="etag">ETag used to prevent conflict in device template
        /// updates.</param>
        /// <param name="displayName">Display name of the device
        /// template.</param>
        /// <param name="description">Detailed description of the device
        /// template.</param>
        public DeviceTemplate(IList<string> type, object capabilityModel, string id = default(string), string etag = default(string), string displayName = default(string), string description = default(string))
        {
            Id = id;
            Type = type;
            Etag = etag;
            DisplayName = displayName;
            Description = description;
            CapabilityModel = capabilityModel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets unique ID of the device template.
        /// </summary>
        [JsonProperty(PropertyName = "@id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets or sets the JSON-LD types of this device template.
        /// </summary>
        [JsonProperty(PropertyName = "@type")]
        public IList<string> Type { get; set; }

        /// <summary>
        /// Gets or sets eTag used to prevent conflict in device template
        /// updates.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Gets or sets display name of the device template.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets detailed description of the device template.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the capability model utilized by this device template.
        /// </summary>
        [JsonProperty(PropertyName = "capabilityModel")]
        public object CapabilityModel { get; set; }

    }
}
