// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IoTCentral.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for JobRecurrence.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum JobRecurrence
    {
        /// <summary>
        /// The job will run once daily
        /// </summary>
        [EnumMember(Value = "daily")]
        Daily,
        /// <summary>
        /// The job will run once every week
        /// </summary>
        [EnumMember(Value = "weekly")]
        Weekly,
        /// <summary>
        /// The job will run once every month
        /// </summary>
        [EnumMember(Value = "monthly")]
        Monthly
    }
    internal static class JobRecurrenceEnumExtension
    {
        internal static string ToSerializedValue(this JobRecurrence? value)
        {
            return value == null ? null : ((JobRecurrence)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this JobRecurrence value)
        {
            switch( value )
            {
                case JobRecurrence.Daily:
                    return "daily";
                case JobRecurrence.Weekly:
                    return "weekly";
                case JobRecurrence.Monthly:
                    return "monthly";
            }
            return null;
        }

        internal static JobRecurrence? ParseJobRecurrence(this string value)
        {
            switch( value )
            {
                case "daily":
                    return JobRecurrence.Daily;
                case "weekly":
                    return JobRecurrence.Weekly;
                case "monthly":
                    return JobRecurrence.Monthly;
            }
            return null;
        }
    }
}
