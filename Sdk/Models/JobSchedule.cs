// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IoTCentral.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The schedule definition of job.
    /// </summary>
    public partial class JobSchedule
    {
        /// <summary>
        /// Initializes a new instance of the JobSchedule class.
        /// </summary>
        public JobSchedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobSchedule class.
        /// </summary>
        /// <param name="start">The start time for the scheduled job</param>
        /// <param name="recurrence">The recurrence of the scheduled job. If
        /// not provided, the job will run once at the specified start time.
        /// Possible values include: 'Daily', 'Weekly', 'Monthly'</param>
        /// <param name="end">The specification of when to end the scheduled
        /// job.</param>
        public JobSchedule(System.DateTime start, JobRecurrence? recurrence = default(JobRecurrence?), JobScheduleEnd end = default(JobScheduleEnd))
        {
            Recurrence = recurrence;
            Start = start;
            End = end;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the recurrence of the scheduled job. If not provided,
        /// the job will run once at the specified start time. Possible values
        /// include: 'Daily', 'Weekly', 'Monthly'
        /// </summary>
        [JsonProperty(PropertyName = "recurrence")]
        public JobRecurrence? Recurrence { get; set; }

        /// <summary>
        /// Gets or sets the start time for the scheduled job
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public System.DateTime Start { get; set; }

        /// <summary>
        /// Gets or sets the specification of when to end the scheduled job.
        /// </summary>
        [JsonProperty(PropertyName = "end")]
        public JobScheduleEnd End { get; set; }

    }
}
