// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IoTCentral.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The device command definition.
    /// </summary>
    public partial class DeviceCommand
    {
        /// <summary>
        /// Initializes a new instance of the DeviceCommand class.
        /// </summary>
        public DeviceCommand()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeviceCommand class.
        /// </summary>
        /// <param name="id">The request ID of the device command
        /// execution.</param>
        /// <param name="connectionTimeout">Connection timeout in seconds to
        /// wait for a disconnected device to come online. Defaults to 0
        /// seconds.</param>
        /// <param name="responseTimeout">Response timeout in seconds to wait
        /// for a command completion on a device. Defaults to 30
        /// seconds.</param>
        /// <param name="request">The payload for the device command, support
        /// any primitive types or object.</param>
        /// <param name="response">The payload of the device command response,
        /// support any primitive types or object.</param>
        /// <param name="responseCode">The status code of the device command
        /// response.</param>
        public DeviceCommand(string id = default(string), int? connectionTimeout = default(int?), int? responseTimeout = default(int?), object request = default(object), object response = default(object), int? responseCode = default(int?))
        {
            Id = id;
            ConnectionTimeout = connectionTimeout;
            ResponseTimeout = responseTimeout;
            Request = request;
            Response = response;
            ResponseCode = responseCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the request ID of the device command execution.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets or sets connection timeout in seconds to wait for a
        /// disconnected device to come online. Defaults to 0 seconds.
        /// </summary>
        [JsonProperty(PropertyName = "connectionTimeout")]
        public int? ConnectionTimeout { get; set; }

        /// <summary>
        /// Gets or sets response timeout in seconds to wait for a command
        /// completion on a device. Defaults to 30 seconds.
        /// </summary>
        [JsonProperty(PropertyName = "responseTimeout")]
        public int? ResponseTimeout { get; set; }

        /// <summary>
        /// Gets or sets the payload for the device command, support any
        /// primitive types or object.
        /// </summary>
        [JsonProperty(PropertyName = "request")]
        public object Request { get; set; }

        /// <summary>
        /// Gets the payload of the device command response, support any
        /// primitive types or object.
        /// </summary>
        [JsonProperty(PropertyName = "response")]
        public object Response { get; private set; }

        /// <summary>
        /// Gets the status code of the device command response.
        /// </summary>
        [JsonProperty(PropertyName = "responseCode")]
        public int? ResponseCode { get; private set; }

    }
}
