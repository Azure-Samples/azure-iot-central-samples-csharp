// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IoTCentral.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for EnrollmentGroupType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum EnrollmentGroupType
    {
        /// <summary>
        /// Regular (non-Edge) IoT devices
        /// </summary>
        [EnumMember(Value = "iot")]
        IoTdevices,
        /// <summary>
        /// IoT Edge devices
        /// </summary>
        [EnumMember(Value = "iotEdge")]
        IoTEdgedevices
    }
    internal static class EnrollmentGroupTypeEnumExtension
    {
        internal static string ToSerializedValue(this EnrollmentGroupType? value)
        {
            return value == null ? null : ((EnrollmentGroupType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this EnrollmentGroupType value)
        {
            switch( value )
            {
                case EnrollmentGroupType.IoTdevices:
                    return "iot";
                case EnrollmentGroupType.IoTEdgedevices:
                    return "iotEdge";
            }
            return null;
        }

        internal static EnrollmentGroupType? ParseEnrollmentGroupType(this string value)
        {
            switch( value )
            {
                case "iot":
                    return EnrollmentGroupType.IoTdevices;
                case "iotEdge":
                    return EnrollmentGroupType.IoTEdgedevices;
            }
            return null;
        }
    }
}
